// Создание объекта___________________________________________________________

let user1 = new Object(); // синтаксис конструктор объекта 
let user2 = {}; // синтаксис литерал объекта - более предпочтительный

// Литералы и свойства________________________________________________________________

let user3 = {
  name: "John", // ключ - свойство "name" значение "John"
  age: 30
};

// Проверка существования свойства и его удаление______________________________________

if (user1.name)
  delete user1.name;

// Имена свойств из нескольких слов______________________________________________________

let user4 = {
  name: "John",
  age: 30,
  "likes birds": true  // имя свойства из нескольких слов должно быть в кавычках
};

// Доступ к именам свойств из нескольких слов___________________________________________

user4["likes birds"] = true; // user4.propertyName - такой способ не сработает

let propertyName = "likes birds";
user4.propertyName = true; // НЕ СРАБОТАЕТ !!!

// Вычисляемые свойства

let fruit = prompt("Какой фрукт купить?", "apple");
let bag = {
  [fruit]: 5, // имя свойства будет взято из переменной fruit
};
alert(bag.apple); // 5, если fruit="apple"

// Свойство из переменной__________________________________________________________

function makeUser(name, age) {
  return {
    name: name,
    age: age
    // ...другие свойства
  };
}
let user = makeUser("John", 30);
alert(user.name); // John
// тоже самое что и:
function makeUser(name, age) {
  return {
    name, // то же самое, что и name: name
    age   // то же самое, что и age: age
    // ...
  };
}

// Ограничение на имена свойств_______________________________________________________

let obj = {
  for: 1, // не ограничений на именование свойств объекта
  let: 2, // за исключением специального свойства "__proto__"
  return: 3
};

alert(obj.for + obj.let + obj.return);  // 6

// Проверка существования свойства, оператор "in"____________________________________________________

let user = {};
alert(user.noSuchProperty === undefined); // при обращении к свойству, которого не существует, возвращается значение "undefined"

let user = {
  name: "John",
  age: 30
};

alert("age" in user); // true, user.age существует
alert("blabla" in user); // false, user.blabla не существует

// Цикл "for .. in"____________________________________________________________________________

for (key in object) {
  // тело цикла выполняется для каждого свойства объекта
}

// пример

let user = {
  name: "John",
  age: 30,
  isAdmin: true
};

for (let key in user) {
  alert( key );  // переменная "key" поочередно принимает названия свойств: name, age, isAdmin
  alert( user[key] ); // обращение к значениям свойств через переменную "key". John, 30, true
}